<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_vmw_cloudservice.OnChangeHideItems</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>OnChangeHideItems</name>
        <script><![CDATA[/************************************************************
* Copyright (c) 2019-2023 VMware, Inc. All Rights Reserved.
* You may not use this product except in compliance with the License.
* This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
*************************************************************/

var OnChangeHideItems = Class.create();
OnChangeHideItems.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	//CAS Word is renamed to vRA and vRA is again replaced with Aria
	updateItems : function(source_sys_id,child_sys_id, target_tablename,target_field)
	{
		try
		{
			CASLogger.debug('Inside  OnChangeHideItems.updateItems: Use to update Items on change of records. ');
			source_sys_id = this.getParameter('source_sys_id')? this.getParameter('source_sys_id') : source_sys_id ;
			child_sys_id = this.getParameter('child_sys_id')? this.getParameter('child_sys_id') : child_sys_id ;
			target_tablename = this.getParameter('target_tablename')? this.getParameter('target_tablename') : target_tablename ;
			target_field = this.getParameter('target_field')? this.getParameter('target_field') : target_field ;

			var source_arr = source_sys_id.split(",");
			CASLogger.debug('Inside OnChangeHideItems.updateItems: source_arr:  '+source_arr + ' target_tablename: '  +target_tablename);


			var itemsSysIds = '';
			for (var i =0; i < source_arr.length; i++) {
				var item = new GlideRecord(target_tablename);

				item.addQuery(target_field,source_arr[i]);

				item.query();
				//CASLogger.debug('Inside for loop of OnChangeHideItems.updateItems:');
				while(item.next()) {
					if(target_tablename == 'sc_cat_item_category'){
						if(child_sys_id.indexOf(item.sc_cat_item)!=-1){
							itemsSysIds += item.sc_cat_item + ',';
							CASLogger.debug("Inside if  block of target_tablename: OnChangeHideItems.updateItems:---itemsSysIds: " + itemsSysIds  );
						}	
					}else{
						if(child_sys_id.indexOf(item.sys_id)!=-1){
							itemsSysIds += item.sys_id + ',';
							CASLogger.debug("Inside elseif  block of target_tablename: OnChangeHideItems.updateItems:---itemsSysIds: " + itemsSysIds  );
						}
					}
				}

			}
			return itemsSysIds+'';

		}

		catch(e)
		{
			CASLogger.debug('Inside Catch Block of OnChangeHideItems.updateItems: Exception Block: itemsSysIds: '+itemsSysIds+' child_sys_id: '+child_sys_id+' source_arr: '+source_arr);
			CASLogger.error("Exception in OnChangeHideItems:updateItems() :" + e + ". Error found" + e.stack);
		}

	},



	/*
	HideProjectsAndItems :function(Org, Projects)
	{
		try
		{
		var appUtil = new CASAppUtil();
		Org = this.getParameter('Org') ? this.getParameter('Org') : Org;
		Projectss   = this.getParameter('Projects') ? this.getParameter('Projects') : Projects;
		var OrgValue = [];
		OrgValue = Org.split(',');

		var ProjectsSysIds = '';
			for (var i =0; i < OrgValue.length; i++) {

				var ProjectCategory = new GlideRecord(appUtil.configuration.table.category);
				ProjectCategory.addQuery('organization',OrgValue[i]);
				ProjecrtCategory.query();
				while(ProjecrtCategory.next()) {
					ProjectsSysIds += ProjectCategory.sys_id + ',';

				}

			}
			var ProjectInfo=Projects.split(',');


			for(var j=ProjectInfo.length-1; j>=0;j--)

				{
				if(ProjectsSysIds.indexOf(ProjectInfo[j])==-1)
					{
					ProjectInfo.splice(j,1);
				}

			}

			return ProjectInfo.toString();


		}
		catch(e)
			{
				gs.error("Exception in CASOnChangeServicesHideItems:HideProjectsAndItems() :" + e);
			}

	}, */





	type: 'OnChangeHideItems'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-24 10:12:37</sys_created_on>
        <sys_id>c6e560961bf2330058ba21b6bc4bcbf5</sys_id>
        <sys_mod_count>63</sys_mod_count>
        <sys_name>OnChangeHideItems</sys_name>
        <sys_package display_value="VMware Aria Automation Plugin" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="VMware Aria Automation Plugin">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_script_include_c6e560961bf2330058ba21b6bc4bcbf5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-05 05:27:22</sys_updated_on>
    </sys_script_include>
</record_update>
