<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>sysverb_insert</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments>Ui Action for saving CAS/vRA-Organization</comments>
        <condition>current.canCreate() </condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Validate and Save</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[/************************************************************
* Copyright (c) 2019-2023 VMware, Inc. All Rights Reserved.
* You may not use this product except in compliance with the License.
* This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
*************************************************************/

var CAS_URL = "/x_vmw_cloudservice_register_cas_organization.do?sys_id=-1&sysparm_query=select_automation_service=vRealiseAutomationCloud^name=" + current.name + "^cas_url=" + current.cas_url + "";


var vRA_URL = "/x_vmw_cloudservice_register_cas_organization.do?sys_id=-1&sysparm_query=select_automation_service=vrealizeAutomationService^name=" + current.name + "^mid_server=" + current.mid_server + "^hostname=" + current.hostname + "^username=" + current.username + "";

var currentEndpointType = current.getValue('select_automation_service');

if (current.active == true || current.active == 'true') {
    // condition for registering the VMware Aria Automation Endpoint with or without '/'.
    if (currentEndpointType == 'vrealizeAutomationService') {
        var length = current.hostname.toString().length;
        if (current.hostname.charAt(length - 1) == '/') {
            current.hostname = current.hostname.substring(0, length - 1);
            OnClick();
        } else {
            OnClick();
        }
    } else {
        OnClick();
    }

} else {

    gs.addErrorMessage(" Please check " + 'Active' + " checkbox to register endpoint");
    if (currentEndpointType == 'vRealiseAutomationCloud') {
        action.setRedirectURL(CAS_URL);
    } else if (currentEndpointType == 'vrealizeAutomationService') {
        action.setRedirectURL(vRA_URL);
    }

}

function OnClick() {

    try {
        CASLogger.debug('Inside  Save and Import.onClick:');
		
		var appUtil = new CASAppUtil();

        var checkRun = 'false';
        var URLQueue = "/x_vmw_cloudservice_cas_queue_list.do?sysparm_query=state!%3DCompleted%5Estate!%3DError&sysparm_view=";
        var recordCheck = new CASDaoUtil();
        var projectRecord = recordCheck.RegisterRecordCheck(current);
        var check = recordCheck.checkConfigurations();
        var ds_plugin1 = GlidePluginManager.isActive("com.glide.domain");
        var ds_plugin2 = GlidePluginManager.isActive("com.glideapp.servicecatalog.domain_separation");
        var check_domain_deactivated = gs.getProperty(appUtil.configuration.properties.check_domain_deactivated);
        if (projectRecord >= 1) {
            if ((ds_plugin1 == true || ds_plugin1 == 'true') && (ds_plugin2== true ||ds_plugin2=='true')) {
				if(current.sys_domain == 'global'){
					gs.addErrorMessage("Endpoint registration in global domain is not allowed. Please select the correct domain from domain picker to configure the endpoint.");
				}else{
					gs.addErrorMessage("Only one endpoint can be registered in a domain");
				}
            } else {
                gs.addErrorMessage("VMware Aria Automation Endpoint has already been registered with same details.");
            }
            if (currentEndpointType == 'vRealiseAutomationCloud') {
                action.setRedirectURL(CAS_URL);
            } else if (currentEndpointType == 'vrealizeAutomationService') {
                action.setRedirectURL(vRA_URL);
            }

        }
        //to check pre-configurations
        else if (check != true) {
            var missingConfiguration = check.split(",");
            for (var i = 0; i < missingConfiguration.length; i++) {

                var string = missingConfiguration[i].toString();
                var formattedString = gs.getMessage(string) + "<br>";
                var formattedString1 = gs.getMessage(string) + "\n";
                gs.addErrorMessage(formattedString);
                gs.error(formattedString1);



            }
            gs.addErrorMessage('VMware Aria Automation Endpoint is not allowed to register.Please do missing configurations first, and register the endpoint.');
            if (currentEndpointType == 'vRealiseAutomationCloud') {
                action.setRedirectURL(CAS_URL);
            } else if (currentEndpointType == 'vrealizeAutomationService') {
                action.setRedirectURL(vRA_URL);
            }
        }
        //Active the 'checkThreadLimit'.
        else {
            if (ds_plugin1 == true || ds_plugin1 == 'true') {

                if (ds_plugin2 == true || ds_plugin2 == 'true') {
					if(current.sys_domain != 'global'){
						checkRun = 'true';
					}else{
						gs.addErrorMessage("Endpoint registration in global domain is not allowed. Please select the correct domain from domain picker to configure the endpoint.");
					}
                    
                } else {
                    if (check_domain_deactivated == 'false' || check_domain_deactivated == false) {
                        gs.addErrorMessage("'Service Catalog - Domain Separation' plugin is not activated. Please register the endpoint after activating the plugin.");
                    } else {
                        checkRun = 'true';
                    }
                }
            } else {
                checkRun = 'true';
            }
            if (checkRun == 'true' ||checkRun == true) {
                var Validate = new EndpointRegister(); // renamed from cas to vRA to VMware Aria Automation
                var ValidateToken = Validate.generateApiToken(current);

                if (ValidateToken != false) {
                    current.api_token = ValidateToken;


                    var regionCheck = new BaseUrlCheck().HostNameRegionCheck(current);

                    if (regionCheck != false) {
                        gs.addInfoMessage("VMware Aria Automation Endpoint registered. Import in progress");
						current.u_organization_id = regionCheck;
                        var OrgSys = current.insert();
                        var Org = new ImportStart();
                        Org.startImportProject(OrgSys);
                        recordCheck.ScheduledJobCatalogImport();
                        Org.preImportCMDB(OrgSys);
                        action.setRedirectURL(URLQueue);
                        recordCheck.checkThreadLimit();
                    } else {
                        gs.addErrorMessage("Endpoint details entered are invalid. Please re-enter");
                        if (currentEndpointType == 'vRealiseAutomationCloud') {
                            action.setRedirectURL(CAS_URL);
                        } else if (currentEndpointType == 'vrealizeAutomationService') {
                            action.setRedirectURL(vRA_URL);
                        }
                    }

                } else {
                    gs.addErrorMessage("Endpoint details entered are invalid. Please re-enter");
                    if (currentEndpointType == 'vRealiseAutomationCloud') {
                        action.setRedirectURL(CAS_URL);
                    } else if (currentEndpointType == 'vrealizeAutomationService') {
                        action.setRedirectURL(vRA_URL);
                    }

                }
            }



        }




    } catch (e) {
        CASLogger.error("Exception caught while registering VMware Aria Automation Endpoint" + e);
    }


}

//cas

//old]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>false</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>ajay.gunjal</sys_created_by>
        <sys_created_on>2019-05-16 07:20:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>33a8ac481be573000f14986cbc4bcb89</sys_id>
        <sys_mod_count>461</sys_mod_count>
        <sys_name>Validate and Save</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware Aria Automation Plugin" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware Aria Automation Plugin">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_ui_action_33a8ac481be573000f14986cbc4bcb89</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-05-22 11:52:47</sys_updated_on>
        <table>x_vmw_cloudservice_register_cas_organization</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
