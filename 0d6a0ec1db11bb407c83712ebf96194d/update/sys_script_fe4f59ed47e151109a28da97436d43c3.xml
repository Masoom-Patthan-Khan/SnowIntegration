<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_vmw_cloudservice_deployments</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>makeDeploymentResourceRelationship</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*************************************************************************************************************
* Copyright (c) 2022-2023 VMware, Inc. All Rights Reserved.
* You may not use this product except in compliance with the License.
* This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
**************************************************************************************************************/
(function executeRule(current, previous /*null when async*/ ) {

    this.appUtil = new CASAppUtil();
    var grRes = new GlideRecord(this.appUtil.configuration.table.machines);
    grRes.addEncodedQuery('deploymentid=' + current.deployment_id);
    grRes.query();
    while (grRes.next()) {

        var vr = new GlideRecord(this.appUtil.configuration.table.relationship);
        vr.addEncodedQuery("parent=" + current.sys_id + '^type=' + gs.getProperty(this.appUtil.configuration.properties.relationship) + '^child=' + grRes.sys_id);

        vr.query();
        if (vr.next()) {
            vr.parent = current.sys_id;
            vr.type = gs.getProperty(this.appUtil.configuration.properties.relationship);
            vr.child = grRes.sys_id;
            vr.update();
        } else {
            vr.initialize();
            vr.parent = current.sys_id;
            vr.type = gs.getProperty(this.appUtil.configuration.properties.relationship);
            vr.child = grRes.sys_id;
            vr.insert();
        }
        grRes.project = current.u_project.organization;
        grRes.project_id = current.project_id;
        grRes.update();

    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-26 04:16:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fe4f59ed47e151109a28da97436d43c3</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>makeDeploymentResourceRelationship</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware Aria Automation Plugin" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware Aria Automation Plugin">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>sys_script_fe4f59ed47e151109a28da97436d43c3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-05 10:53:21</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=fe4f59ed47e151109a28da97436d43c3"/>
</record_update>
