<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>true</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="">67908d542ffd2110b2bbd6ab2799b675</cat_item>
        <cat_variable>IO:54e80f24db5333007b245385ca9619ca</cat_variable>
        <condition/>
        <description>x_vmw_clientScript_</description>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>onChange of Version</name>
        <order>0</order>
        <published_ref/>
        <script><![CDATA[/************************************************************
* Copyright (c) 2023 VMware, Inc. All Rights Reserved.
* You may not use this product except in compliance with the License.
* This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
*************************************************************/

function onChange(control, oldValue, newValue, isLoading) {
    if (newValue == '') {
        return;
    }
    var catItemSysid = '';
    var cat_item = g_form.getValue('cat_item');
    if (cat_item == '' || cat_item == undefined) {
        catItemSysid = g_form.getUniqueValue();
    } else {
        catItemSysid = cat_item;
    }
    if (sessionStorage.getItem('catalog_script_counter') == 0) {
        var ga = new GlideAjax('x_vmw_cloudservice.CSClientScriptBridge');
        ga.addParam('sysparm_name', 'getProperty');
        ga.getXML(result);

        function result(response) {
            var answer = response.responseXML.documentElement.getAttribute('answer');
            var ans = answer.toLowerCase();
            if (ans == 'true' || ans == true) {
                try {
                    var loadingDialog3 = new GlideDialogWindow('x_vmw_cloudservice_Loader_Catalog', true, '500', '200');
                    loadingDialog3.setTitle('');
                    loadingDialog3.render();
                    var interval = setInterval(function() {
                        if (sessionStorage.getItem('catalog_script_counter') == 0) {
                            loadingDialog3.destroy();
                            clearInterval(interval);
                        }
                    }, 500);
                } catch (e) {}
            }
        }
    }
    var gAjax = new GlideAjax('x_vmw_cloudservice.FetchVersions');
    gAjax.addParam('sysparm_name', 'getVersionsFields');
    gAjax.addParam('sysparm_sys_id', catItemSysid);
    gAjax.addParam('sysparm_version', newValue.toString());
    gAjax.getXMLAnswer(callBack);
    var gAjax2 = new GlideAjax('x_vmw_cloudservice.FetchVersions');
    gAjax2.addParam('sysparm_name', 'getHiddenContainers');
    gAjax2.addParam('sysparm_sys_id', catItemSysid);
    gAjax2.getXMLAnswer(callBack2);

    function callBack(response) {
        if (response != 'false') {
            var result = response.split('||');
            var fieldsArray = result[0].split(',');
            var mandatoryFields = result[1].split(',');
            var hiddenFields = result[2].split(',');
            for (var i = 0; i < fieldsArray.length; i++) {
                g_form.setVisible(fieldsArray[i], true);
                g_form.setDisplay(fieldsArray[i], true);
            }
            for (var j = 0; j < mandatoryFields.length; j++) {
                g_form.setMandatory(mandatoryFields[j], true);
            }
            for (var k = 0; k < hiddenFields.length; k++) {
                g_form.setMandatory(hiddenFields[k], false);
                g_form.setVisible(hiddenFields[k], false);
                g_form.setDisplay(hiddenFields[k], false);
            }
        }
        if (cat_item == '' || cat_item == undefined) {
            catItemSysid = g_form.getUniqueValue();
            var gAjax = new GlideAjax('x_vmw_cloudservice.FetchVersions');
            gAjax.addParam('sysparm_name', 'getDatagridFields');
            gAjax.addParam('sysparm_sys_id', catItemSysid);
            gAjax.getXMLAnswer(callBack1);
        } else {
            var catItemSysid = g_form.getValue('cat_item');
            var gAjax = new GlideAjax('x_vmw_cloudservice.FetchVersions');
            gAjax.addParam('sysparm_name', 'getMacroFields');
            gAjax.addParam('sysparm_sys_id', catItemSysid);
            gAjax.getXMLAnswer(callBack3);
        }
    }

    function callBack1(response) {
        if (response != 'false') {
            var datagridFields = response.split(',');
            for (var j = 0; j < datagridFields.length; j++) {
                g_form.setMandatory(datagridFields[j], false);
                g_form.setDisplay(datagridFields[j], false);
            }
        }
    }

    function callBack2(response) {
        if (response != 'false' && response != null) {
            var hiddenContainer = JSON.parse(response);
            for (var j = 0; j < hiddenContainer.length; j++) {
                g_form.setDisplay(hiddenContainer[j], false);
                g_form.setDisplay(hiddenContainer[j] + '_end', false);
            }
        }
    }

    function callBack3(response) {
        if (response != 'false') {
            var macroFields = response.split(',');
            for (var i = 0; i < macroFields.length; i++) {
                g_form.setMandatory(macroFields[i], false);
                g_form.setDisplay(macroFields[i], false);
            }
        }
    }
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-22 07:23:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>70f451202ffd2110b2bbd6ab2799b67c</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>onChange of Version</sys_name>
        <sys_overrides/>
        <sys_package display_value="VMware Aria Automation Plugin" source="x_vmw_cloudservice">0d6a0ec1db11bb407c83712ebf96194d</sys_package>
        <sys_policy/>
        <sys_scope display_value="VMware Aria Automation Plugin">0d6a0ec1db11bb407c83712ebf96194d</sys_scope>
        <sys_update_name>catalog_script_client_70f451202ffd2110b2bbd6ab2799b67c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-07 10:02:09</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
